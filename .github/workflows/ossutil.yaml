name: OSSUtil

permissions:
  contents: write

env:
  OSSUTIL_VERSION: "v1.7.8"
  GO_VERSION: "1.21"

on:
  push:
    branches: [main]
    paths:
      - ".github/workflows/ossutil.yaml"
    tags:
      - "*"

  pull_request:
    branches: [main]
    paths:
      - ".github/workflows/ossutil.yaml"

  workflow_dispatch:
    inputs:
      commit:
        description: "OSSUtil commit hash or tag to build"
        required: true
        type: string

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - arch: linux-x64
            os: ubuntu-22.04
            goos: linux
            goarch: amd64
          - arch: linux-arm64
            os: ubuntu-22.04-arm
            goos: linux
            goarch: arm64
          - arch: osx-arm64
            os: macos-15
            goos: darwin
            goarch: arm64
          - arch: windows-x64
            os: windows-latest
            goos: windows
            goarch: amd64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download OSSUtil
        run: |
          git clone https://github.com/aliyun/ossutil.git
          cd ossutil
          git checkout ${{ inputs.commit || env.OSSUTIL_VERSION }}

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build OSSUtil
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          cd ossutil

          # Initialize go module if needed
          if [ ! -f go.mod ]; then
            go mod init github.com/aliyun/ossutil
          fi

          # Download dependencies
          go mod tidy

          # Build the binary
          if [ "${{ matrix.goos }}" = "windows" ]; then
            go build -ldflags="-s -w" -o ../ossutil-${{ matrix.arch }}.exe .
          else
            go build -ldflags="-s -w" -o ../ossutil-${{ matrix.arch }} .
          fi
        shell: bash

      - name: Make binary executable (Unix)
        if: matrix.goos != 'windows'
        run: chmod +x ossutil-${{ matrix.arch }}

      - name: Test binary
        run: |
          if [ "${{ matrix.goos }}" = "windows" ]; then
            ./ossutil-${{ matrix.arch }}.exe help
          else
            ./ossutil-${{ matrix.arch }} help
          fi
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        id: upload-artifacts
        with:
          name: ossutil-${{ matrix.arch }}-${{ github.run_number }}
          path: ossutil-${{ matrix.arch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
          retention-days: 30
          compression-level: 6

      - name: Artifact info
        run: |
          echo "Architecture: ${{ matrix.arch }}"
          echo "Artifact ID: ${{ steps.upload-artifacts.outputs.artifact-id }}"
          echo "Artifact URL: ${{ steps.upload-artifacts.outputs.artifact-url }}"

      - name: Upload to release
        if: github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "ossutil-${{ inputs.commit || env.OSSUTIL_VERSION }}"
          name: "OSSUtil Build ${{ inputs.commit || env.OSSUTIL_VERSION }}"
          files: ossutil-${{ matrix.arch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: true
