name: Download and Build ANGLE

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            arch: amd64
            target_cpu: "x64"
          - platform: linux/arm64  
            arch: arm64
            target_cpu: "arm64"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Depot Tools
        uses: newkdev/setup-depot-tools@v1.0.1

      - name: Cache ANGLE source and build artifacts
        uses: actions/cache@v4
        id: cache-angle
        with:
          path: |
            angle
            out
          key: angle-${{ matrix.arch }}-${{ hashFiles('commit') }}-${{ hashFiles('build.sh') }}

      - name: Download ANGLE
        if: steps.cache-angle.outputs.cache-hit != 'true'
        run: |
          mkdir -pv angle
          cd angle
          fetch angle
          git checkout $(cat ../commit)
          gclient sync

      - name: Build ANGLE
        run: |
          cd angle

          # config
          gn gen ../out/Release --args=" \
            is_debug=false \
            angle_enable_vulkan=true \
            angle_enable_swiftshader=true \
            angle_enable_gl=false \
            angle_enable_gl_desktop_backend=false \
            angle_enable_wgpu=false \
            angle_enable_null=false \
            angle_use_x11=false \
            angle_has_histograms=false \
            angle_build_tests=false"

          # use SwiftShader default
          sed -i -e 's/return angle::vk::ICD::Default;/return angle::vk::ICD::SwiftShader;/g' src/libANGLE/renderer/vulkan/DisplayVk.cpp

          # build
          ninja -C ../out/Release libEGL libGLESv2 libvulkan swiftshader_libvulkan

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        id: upload-artifacts
        with:
          name: angle-libraries-${{ matrix.arch }}-${{ github.run_number }}
          path: |
            out/Release/libEGL.so*
            out/Release/libGLESv2.so*
            out/Release/libvulkan.so*
            out/Release/libvk_swiftshader.so*
          retention-days: 30
          compression-level: 6

      - name: Output artifact info
        run: |
          echo "Architecture: ${{ matrix.arch }}"
          echo "Artifact ID: ${{ steps.upload-artifacts.outputs.artifact-id }}"
          echo "Artifact URL: ${{ steps.upload-artifacts.outputs.artifact-url }}"

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main

  collect:
    runs-on: ubuntu-latest
    needs: build
    if: always() && contains(needs.build.result, 'success')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: angle-libraries-*-${{ github.run_number }}
          path: collected-artifacts
          merge-multiple: true

      - name: List collected artifacts
        run: |
          echo "Collected artifacts:"
          find collected-artifacts -type f -name "*.so*" | sort

      - name: Upload combined artifacts
        uses: actions/upload-artifact@v4
        with:
          name: angle-libraries-all-platforms-${{ github.run_number }}
          path: collected-artifacts/
          retention-days: 30
          compression-level: 6
