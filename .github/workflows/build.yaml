name: Download and Build ANGLE

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]

jobs:
  download:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Depot Tools
        uses: newkdev/setup-depot-tools@v1.0.1

      - name: Cache ANGLE source
        uses: actions/cache@v4
        id: cache-angle
        with:
          path: angle
          key: angle-source-${{ hashFiles('commit') }}-${{ hashFiles('download.sh') }}

      - name: Download ANGLE
        if: steps.cache-angle.outputs.cache-hit != 'true'
        run: |
          chmod +x download.sh
          ./download.sh

      - name: Upload ANGLE source as artifact
        uses: actions/upload-artifact@v4
        with:
          name: angle-source
          path: angle/
          retention-days: 1
          compression-level: 1

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true

  build:
    runs-on: ${{ matrix.runner }}
    needs: download
    strategy:
      matrix:
        include:
          - arch: x86_64
            runner: ubuntu-latest
            target_cpu: "x64"
          - arch: arm64
            runner: ubuntu-latest-arm64
            target_cpu: "arm64"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Depot Tools
        uses: newkdev/setup-depot-tools@v1.0.1

      - name: Download ANGLE source artifact
        uses: actions/download-artifact@v4
        with:
          name: angle-source
          path: angle/

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: out
          key: angle-build-${{ matrix.arch }}-${{ hashFiles('commit') }}-${{ hashFiles('build.sh') }}

      - name: Build ANGLE
        run: |
          chmod +x build.sh
          # Set target CPU architecture for the build
          export TARGET_CPU=${{ matrix.target_cpu }}
          ./build.sh

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        id: upload-artifacts
        with:
          name: angle-libraries-${{ matrix.arch }}-${{ github.run_number }}
          path: |
            out/Release/libEGL.so*
            out/Release/libGLESv2.so*
            out/Release/libvulkan.so*
            out/Release/libvk_swiftshader.so*
          retention-days: 30
          compression-level: 6

      - name: Output artifact info
        run: |
          echo "Architecture: ${{ matrix.arch }}"
          echo "Artifact ID: ${{ steps.upload-artifacts.outputs.artifact-id }}"
          echo "Artifact URL: ${{ steps.upload-artifacts.outputs.artifact-url }}"

  collect:
    runs-on: ubuntu-latest
    needs: build
    if: always() && contains(needs.build.result, 'success')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: angle-libraries-*-${{ github.run_number }}
          path: collected-artifacts
          merge-multiple: true

      - name: List collected artifacts
        run: |
          echo "Collected artifacts:"
          find collected-artifacts -type f -name "*.so*" | sort

      - name: Upload combined artifacts
        uses: actions/upload-artifact@v4
        with:
          name: angle-libraries-all-platforms-${{ github.run_number }}
          path: collected-artifacts/
          retention-days: 30
          compression-level: 6
